{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rinnahlagroma/TRAINING/NEXTJS/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.title,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/rinnahlagroma/TRAINING/NEXTJS/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACG,KAFf;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACI,OAHjB;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACK;AAJrB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQN,a;;AAqDT,eAAeA,aAAf","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient } from 'mongodb';\n\nfunction MeetupDetails(props) {\n  return (\n    <MeetupDetail\n      image={props.meetupData.image}\n      title={props.title}\n      address={props.address}\n      description={props.description}\n    />\n  );\n}\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect(\n    'mongodb+srv://rinnah:admin1234@cluster0.ck0aend.mongodb.net/meetups?retryWrites=true&w=majority'\n    );\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\n\n    client.close();\n\n    return {\n        fallback: false,\n        paths: meetups.map(meetup => ({ params: {meetupId: meetup._id.toString() } \n        }))\n    };\n}\n\nexport async function getStaticProps(context) {\n  // fetch data for a single meetup\n\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    'mongodb+srv://rinnah:admin1234@cluster0.ck0aend.mongodb.net/meetups?retryWrites=true&w=majority'\n    );\n    const db = client.db();\n\n    const meetupsCollection = db.collection('meetups');\n\n    const selectedMeetup = await meetupsCollection.findOne({_id:meetupId});\n\n    client.close();\n\n  return {\n    props: {\n      meetupData: selectedMeetup\n    },\n  };\n}\n\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}